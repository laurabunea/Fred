/*------------------------------------*\
    #GRID STYLES
\*------------------------------------*/

.grid {
    font-size: 0;
    margin-left: -.5rem;
    margin-right: -.5rem;
    
    @include medium {
        margin-left: -1rem;
        margin-right: -1rem;
    }

    & > * {
        @extend %inline-block;
        font-size: medium;
    }

    & > .grid {
        @extend %inline-block;
        font-size: 0;  
    }
}

.grid--justify {
    text-align: justify;
    font-size: 0;

    & > * {
        @extend %text-left;
        @extend %inline-block;
        float: none;
        font-size: medium;
    }

    &:after {
        @extend %inline-block;
        height: 0;
        width: 100%;
        content: '';
    }
}


    // Font-size medium reset the block to the context of body (ie, 16px)
    %grid__item {
        @extend %inline-block;
        @extend %align--top;
        @extend %text-left;
        font-size: medium;
        text-justify: auto;                 /* [3] */
    }
    .grid > *,
    .grid__item {
        @extend %align--top;
    }
    
    %grid:after,
    %grid__break {
        @extend %inline-block; // This extend is found in core 
        @extend %full-width;
        @extend %col-padding;
        height: 0;
        content: '';
    }


// ----------------------------------------------------------------------------
// grid modififers
// ----------------------------------------------------------------------------

.grid--center { @extend %text-center;}

.grid--middle {
    > * { @extend %align--middle; }
}

.grid--bottom {
    > * { @extend %align--bottom; }
}

.grid--flip-small {
    @include small-only {
        direction: rtl;
        & > * {
            direction: ltr;
        }
    }
}

.grid--table {
//do we need this to be just above large and why the 100% as this breaks with nested grids 
    //@include large {
        display: table;
        table-layout: fixed;
        width: 100%;
        .col & {
            //if the grid is nested reset the width
            width:auto;
        }
        & > * {
            display: table-cell;

        }
    //}

}

.grid.large-grid--table,
.grid.medium-grid--table {
    margin-left:0;
    margin-right:0;
}

.grid--float {
    @extend %clearfix;
    & > * {
        @extend %inline-block;
        @extend %left;
    } 
}
.medium-grid--table {

    @include medium {
        display: table;
        table-layout: fixed;
        width: 100%;
        & > * {
            display: table-cell;
        }
    }
}

.large-grid--table {
    @include large {
        display: table;
        table-layout: fixed;
        width: 100%;
        & > * {
            display: table-cell;
        }
    }
}


%col-padding {

    padding-left: .5rem;
    padding-right: .5rem;

    @include medium {
        & {
            padding-left: 1rem;
            padding-right: 1rem;
        }
    }
}

.col {
    @extend %col-padding;
    @extend %full-width;
}
.gutters {
    @extend %col-padding;
}
.col__padding {
    @extend %col-padding;
}
.col--no-gutters {
    @extend %full-width;
}