/*------------------------------------*\
    #PAGE LAYOUT
\*------------------------------------*/

.wrapper {
    @include rem(max-width, 1152);
    margin-left: auto;
    margin-right: auto;
}

.wrapper--medium {
    @include rem(max-width, 960);
    margin-left: auto;
    margin-right: auto;
}

.wrapper--small {
    @include rem(max-width, 800);
    margin-left: auto;
    margin-right: auto;
}


// ----------------------------------------------------------------------------
// Grid
// ----------------------------------------------------------------------------


.grid {
    font-size: 0;
    margin-left: -.5rem;
    margin-right: -.5rem;
    
    @include medium {
        margin-left: -1rem;
        margin-right: -1rem;
    }

    & > * {
        display:inline-block;
        font-size: medium;
        vertical-align: top;
    }
    
     // & .grid {
     //     margin-left:0;
     //     margin-right:0;
     // }
}

    // .grid > *,
    // .grid__item {
    //     vertical-align: top;
    // }


// ----------------------------------------------------------------------------
// grid modififers
// ----------------------------------------------------------------------------
.grid--justify {
    text-align: justify;
    font-size: 0;

    & > * {
        display:inline-block;
        text-align: left;
        float: none;
        font-size: medium;
    }

    &:after {
        display:inline-block;
        height: 0;
        width: 100%;
        content: '';
    }
}

.grid--center { text-align:center;}

.grid--middle {
    > * { vertical-align: middle; }
}

.grid--bottom {
    > * { vertical-align: bottom; }
}

.grid--flip-small {
    @include small-down {
        direction: rtl;
        & > * {
            direction: ltr;
        }
    }
}


.grid--float {
    @extend %clearfix;
    & > * {
        display:inline-block;
        float:left;
    } 
}


.grid--table {

    display: table;
    table-layout: fixed;
    width: 100%;
    .col & {
        //if the grid is nested reset the width
        width:auto;
    }
    & > * {
        display: table-cell;
    }
   
}

    /* extends grid--table */

    .grid.large-grid--table,
    .grid.medium-grid--table {
        margin-left:0;
        margin-right:0;
    }

    .medium-grid--table {

        @include medium {
            display: table;
            table-layout: fixed;
            width: 100%;
            & > * {
                display: table-cell;
            }
        }
    }

    .large-grid--table {
        @include large {
            display: table;
            table-layout: fixed;
            width: 100%;
            & > * {
                display: table-cell;
            }
        }
    }

// ----------------------------------------------------------------------------
// column info
// ----------------------------------------------------------------------------

$column-padding:16;
$column-padding-mobile:8;

%column-padding {

    @include rem(padding-left, $column-padding-mobile);
    @include rem(padding-right, $column-padding-mobile);

    @include medium {
        & {
            @include rem(padding-left, $column-padding);
            @include rem(padding-right, $column-padding);
        }
    }
}

.col {
    @extend %column-padding;
    width:100%;
}

.gutters { @extend %column-padding;}

.col--no-gutters { width:100%; }



// ----------------------------------------------------------------------------
// main section's vertical spacing
// ----------------------------------------------------------------------------


$section-desktop:64;

.section {
    @include rem(padding-top,$section-desktop);
    @include rem(padding-bottom,$section-desktop);
    @include small-down {
        @include rem(padding-top,$space-xxxl);
        @include rem(padding-bottom,$space-xxxl);
    }
}

// ----------------------------------------------------------------------------
// main sections vertical spacing 
// ----------------------------------------------------------------------------

%layout-left {
    //same as the column gutters on mobile
    @include rem(padding-left,$space-m);
    @include medium {
        @include rem(padding-left,$space-xxxxl);
    }
    @include large {
        & {
            padding-left: 6em;
        }
    }
}

%layout-right {
    //same as the column gutters on mobile
    @include rem(padding-right,$space-m);
    @include medium {
        @include rem(padding-right,$space-xxxxl);
    }
    @include large {
        & {
            padding-right: 6em;
        }
    }
}

.layout {
    box-sizing:border-box;
    @extend %layout-left;
    @extend %layout-right;
}

.layout--bleed-mobile {
    box-sizing:border-box;
    
    // @include medium {
    //     @include rem(padding-left,$space-xxxxl);
    //     @include rem(padding-right,$space-xxxxl);
    // }
    @include large {
        & {
            padding-left: 6em;
            padding-right: 6em;
        }
    }

}

.layout--quarter {
    box-sizing:border-box;
    padding-left:12.5%;
    padding-right:12.5%;
}

//todo test to see if i need col - usedon kb prototype
.layout--left, 
.col.layout--left { @extend %layout-left; }

.layout--right, 
.col.layout--right { @extend %layout-right; }


.layout--half {
    @include large() {
        padding-left: 25%;
        padding-right: 25%;
    }
}




/******************************
    layout modifiers
******************************/

.layout--nudge {
    position:relative;

    @include large() {
        margin-top: -2em;
    }
    
    + .layout--nudge { margin-top: 0; }
}



// ----------------------------------------------------------------------------
// widths
// ----------------------------------------------------------------------------


.full-width { width:100% }
.half { width: 50%; }
.third { width: 33.3333333%; }
.two-thirds { width: 66.666666%; }
.quarter { width: 25%; }
.three-quarters { width: 75%; }
.fifth { width: 20%; }

//todo naming conventions everything is small down
@include small-down() {
    .small-full-width { width: 100%; }
    .small-half { width: 50%; }
    .small-third { width: 33.3333333%; }
    .small-two-thirds { width: 66.666666%; }
    .small-quarter { width: 25%; }
    .small-three-quarters { width: 75%; }
}

@include medium() {
    .medium-full-width { width: 100%; }
    .medium-half { width: 50%; }
    .medium-third { width: 33.3333333%; }
    .medium-two-thirds { width: 66.666666%; }
    .medium-quarter { width: 25%; }
    .medium-three-quarters { width: 75%; }
    .medium-fifth { width: 20%; }
}

@include large() {
    .large-full-width { width: 100%; }
    .large-half { width: 50%; }
    .large-third { width: 33.3333333%; }
    .large-two-thirds { width: 66.666666%; }
    .large-quarter { width: 25%; }
    .large-three-quarters { width: 75%; }
    .large-fifth { width: 20%; }
}

//10 column grid
$cols-large: 10;

@for $i from 1 to $cols-large+1 {
    $width: #{ (((1/$cols-large) * $i) * 100)  + "%"};
    %small-#{$i} {
      
        width: $width;
        
    }
    .small-#{$i} {
        @extend %small-#{$i};
    }
}

@for $i from 1 to $cols-large+1 {
    $width: #{ (((1/$cols-large) * $i) * 100)  + "%"};
    %medium-#{$i} {
        @include medium() {
            & {
                width: $width;
            }
        }
    }
    .medium-#{$i} {
        @extend %medium-#{$i};
    }
}


@for $i from 1 to $cols-large+1 {
    $width: #{ (((1/$cols-large) * $i) * 100)  + "%"};
    %large-#{$i} {
        @include large() {
            & {
                width: $width;
            }
        }
    }

    .large-#{$i} {
        @extend %large-#{$i};
    }
}

