/*------------------------------------*\
    #PLAYPEN
    The place where we solve design 
    problems without dirtying up the 
    sass structure 
\*------------------------------------*/



// Mixin for transition/transform
@mixin translate($x, $y) {
  -webkit-transform: translate($x, $y);
      -ms-transform: translate($x, $y); // IE9+
          transform: translate($x, $y);
}
@mixin transition($transition) {
  -webkit-transition: $transition;
          transition: $transition;
}
@mixin transition-transform($transition) {
  -webkit-transition: -webkit-transform $transition;
     -moz-transition: -moz-transform $transition;
       -o-transition: -o-transform $transition;
          transition: transform $transition;
}
.modal { 
  // This is modal bg
  &:before{
    content: ""; 
    display: none;
    background: rgba(0,0,0,.6);
    position: fixed;
    top: 0; left: 0; right: 0; bottom: 0; 
    z-index: 10;
  }
  
  &:target{
    // Active animate in modal
    &:before{
      display: block;
    }  
    .modal-dialog{
      @include translate(0, 0); 
      top: 10%;  
    }
  }
  /*ADDED TO STOP SCROLLING TO TOP*/
    #close {
      display: none; 
    }

}
.modal-close {
    position:absolute;
    right:1rem;
    top:0.5em;
    font-weight:bold;
}
.modal-dialog {
  background: #fefefe;
  border: #ccc solid 1px;
  border-radius: 5px;
  //margin-left: -200px;
  position: fixed; 
  left: 25%; 
  top: -100%;  
  z-index: 11; 
  width: 50%;
  @include translate(0, -500%);
  @include transition-transform("0.3s ease-out");

}

.layout--forbar {
    @include rem(padding-right,$space-m);
    @include rem(padding-left,$space-m);
    // @include medium {
    //     @include rem(padding-right,$space-xxxxl);
    //     @include rem(padding-left,$space-xxxxl);
    // }
    @include large {
        & {
            padding-left: 6em;
            padding-right:25%;
        }
    }
}

/**
* ---------------------------------------------------------------------------
* States
* ---------------------------------------------------------------------------
*
* Apply states last.
*
*/
/**
* Prevent all user interaction with the element
*/
.is-disabled {
pointer-events: none;
cursor: default;
opacity: 0.5; }
 
/**
* Shows errors, especially in forms.
*
* 1. Assume error class can be applied to an input, containing div or label.
* 2. Give links inside an errored component a clickable appearance.
* 3. Reset form field border-color on focus.
*/
.is-error {
color: #FA4C3D;
border-color: #FA4C3D;
/* [1] */ }
.is-error a {
color: #FA4C3D;
text-decoration: underline;
/* [2] */ }
.is-error .field {
border-color: #FA4C3D; }
.is-error .field:focus {
border-color: #014d8c;
/* [3] */ }
 
.is-field-error {
color: #FA4C3D;
margin-bottom: 0.25em; }
 
.is-warning {
color: #FA4C3D; }
 
.is-hidden {
    display: none; 
}
 
.is-overlay:after {
content: "";
position: absolute;
top: 0;
bottom: 0;
left: 0;
right: 0;
background: rgba(255, 255, 255, 0.85);
-webkit-animation: fadeIn 0.1s ease-out backwards;
animation: fadeIn 0.1s ease-out backwards; }

%ratio {
    position: relative;
    height: 0;
    & > * {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
    }
}

.ratio-square {
    @extend %ratio;
    padding-bottom: 100%;
}

.ratio-filmic { @extend %ratio; }

.crop {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    overflow: hidden;
}

    .crop--bottom {
        > img {
            width: 100%;
            position: absolute;
            bottom: 0;
        }
    }
